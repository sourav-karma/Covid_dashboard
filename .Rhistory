geom_sf(data= fly_sf_center, col = "red", size= 2)+
geom_point(data = est_cntr_buf_df, aes(x = X, y = Y, size= rnk, alpha= rnk), col = "red")+
coord_sf(crs = "+proj=laea +lat_0=45 +lon_0=15 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
ggplot(data = World) +
theme_minimal()+
theme(panel.grid = element_line(color = "slategray1", size= .25))+
geom_sf(fill = "olivedrab", size= .25, col = "grey80") +
geom_sf(data= fly_sf_center, col = "red", size= 2)+
geom_point(data = est_cntr_buf_df, aes(x = X, y = Y, size= rnk, alpha= rnk), col = "red")+
coord_sf(crs = "+proj=laea +lat_0=45 +lon_0=15 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
# plot it:
ggplot()+
theme_minimal()+
geom_sf(data= World, col = "grey", fill = "grey97", size = 0.25)+
geom_point(data = est_cntr_buf_df, aes(x = X, y = Y, size= rnk, alpha= rnk), col = "red")
# plot it:
ggplot()+
theme_minimal()+
geom_sf(data= World, col = "grey", fill = "grey97", size = 0.25)+
geom_point(data = est_cntr_buf_df, aes(x = X, y = Y, size= rnk, alpha= rnk), col = "red")+
coord_sf(crs = "+proj=laea +lat_0=35 +lon_0=25 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
# plot it:
ggplot()+
theme_minimal()+
geom_sf(data= World, col = "grey", fill = "grey97", size = 0.25)+
geom_point(data = est_cntr_buf_df, aes(x = X, y = Y, size= rnk, alpha= rnk), col = "red")+
coord_sf(crs = "+proj=laea +lat_0=35 +lon_0=25 +x_0=4321000 +y_0=3210000 +ellps=WGS84 +units=m +no_defs ")
ggplot(data = World) +
theme_minimal()+
theme(panel.grid = element_line(color = "slategray1", size= .25))+
geom_sf(fill = "olivedrab", size= .25, col = "grey80") +
geom_sf(data= fly_sf_center, col = "red", size= 2)+
geom_point(data = est_cntr_buf_df, aes(x = X, y = Y, size= rnk, alpha= rnk), col = "red")+
coord_sf(crs = "+proj=laea +lat_0=45 +lon_0=15 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
ggplot(data = World) +
theme_minimal()+
theme(panel.grid = element_line(color = "slategray1", size= .25))+
geom_sf(fill = "olivedrab", size= .25, col = "grey80") +
geom_sf(data= fly_sf_center, col = "red", size= 2)+
geom_point(data = est_cntr_buf_df, aes(x = X, y = Y, size= rnk, alpha= rnk), col = "red")+
coord_sf(crs = "+proj=laea +lat_0=45 +lon_0=15 +x_0=4321000 +y_0=3210000 +ellps=WGS84 +units=m +no_defs ")
ggplot(data = World) +
theme_void()+
theme(panel.grid = element_line(color = "slategray1", size= .25))+
geom_sf(fill = "olivedrab", size= .25, col = "grey80") +
geom_sf(data= fly_sf_center, col = "red", size= 2)+
geom_sf(data= est_cntr_buf, col = "black", size= 2, fill = "transparent")+
coord_sf(crs = "+proj=laea +lat_0=35 +lon_0=25 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
ggplot(data = World) +
theme_void()+
theme(panel.grid = element_line(color = "slategray1", size= .25))+
geom_sf(fill = "olivedrab", size= .25, col = "grey80") +
geom_sf(data= fly_sf_center, col = "red", size= 2)+
geom_sf(data= est_cntr_buf, col = "black", size= 1, fill = "transparent")+
coord_sf(crs = "+proj=laea +lat_0=35 +lon_0=25 +x_0=4321000 +y_0=3210000 +ellps=WGS84 +units=m +no_defs ")
tm_shape(est_cntr_buf)+
tm_borders("red", lwd = 2)
# plot it:
ggplot()+
theme_minimal()+
geom_sf(data= World, col = "grey", fill = "grey97", size = 0.25)+
geom_point(data = est_cntr_buf_df, aes(x = X, y = Y, size= rnk, alpha= rnk), col = "red")+
coord_sf(crs = "+proj=laea +lat_0=35 +lon_0=25 +x_0=4321000 +y_0=3210000 +ellps=WGS84 +units=m +no_defs ")
st_crs(est_cntr_buf)
# first 10 points:
est_cntr_buf_df_tmp <- est_cntr_buf_df[1:10,]
scale_alpha(range = c(0, 1))+
scale_size(range = c(0.5, 4))
# first 10 points:
est_cntr_buf_df_tmp <- est_cntr_buf_df[1:10,]
ggplot(data = World) +
theme_void()+
theme(panel.grid = element_line(color = "slategray1", size= .25))+
geom_sf(fill = "olivedrab", size= .25, col = "grey80") +
geom_path(data = est_cntr_buf_df, aes(x = X, y = Y), col = "pink", size= 0.1)+
geom_point(data = est_cntr_buf_df_tmp, aes(x= X, y = Y, alpha = rnk, size= rnk), colour = "red")+
coord_sf(crs = "+proj=laea +lat_0=45 +lon_0=15 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
scale_alpha(range = c(0, 4))+
scale_size(range = c(0.5, 4))
# first 10 points:
est_cntr_buf_df_tmp <- est_cntr_buf_df[1:10,]
ggplot(data = World) +
theme_void()+
theme(panel.grid = element_line(color = "slategray1", size= .25))+
geom_sf(fill = "olivedrab", size= .25, col = "grey80") +
geom_path(data = est_cntr_buf_df, aes(x = X, y = Y), col = "pink", size= 0.1)+
geom_point(data = est_cntr_buf_df_tmp, aes(x= X, y = Y, alpha = rnk, size= rnk), colour = "red")+
coord_sf(crs = "+proj=laea +lat_0=45 +lon_0=15 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
# calculate the rank as character:
est_cntr_buf_df <- est_cntr_buf_df %>%
mutate(frame_name = ifelse(!is.na(prefix), paste0(prefix, rnk), rnk))
### calculate the number of characters in rank (new column):
est_cntr_buf_df <- est_cntr_buf_df %>%
mutate(rnk_nchar = nchar(rnk))
# create separate data frame for image name prefixes:
rnk_joiner <- data.frame(rnk_nchar = c(1, 2, 3),
prefix = c("00", "0", NA))
rnk_joiner
## join two table:
est_cntr_buf_df <- left_join(est_cntr_buf_df, rnk_joiner)
head(est_cntr_buf_df)
# calculate the rank as character:
est_cntr_buf_df <- est_cntr_buf_df %>%
mutate(frame_name = ifelse(!is.na(prefix), paste0(prefix, rnk), rnk))
ggplot(data = World) +
theme_void()+
theme(panel.grid = element_line(color = "slategray1", size= .25))+
geom_sf(fill = "olivedrab", size= .25, col = "grey80") +
geom_path(data = est_cntr_buf_df, aes(x = X, y = Y), col = "pink", size= 0.1)+
#coord_sf(crs = "+proj=laea +lat_0=45 +lon_0=15 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")+
geom_point(data = est_cntr_buf_df_tmp2, aes(x= X, y = Y, alpha = rnk, size= rnk), colour = "orange")+
geom_point(data = est_cntr_buf_df_head, aes(x= X, y = Y), colour = "darkred", size= 2.5)+
scale_alpha(range = c(0, 0.7))+
scale_size(range = c(0.2, 2))+
guides(alpha = F, size = F)
ggplot(data = World) +
theme_void()+
theme(panel.grid = element_line(color = "slategray1", size= .25))+
geom_sf(fill = "olivedrab", size= .25, col = "grey80") +
geom_path(data = est_cntr_buf_df, aes(x = X, y = Y), col = "pink", size= 0.1)+
#coord_sf(crs = "+proj=laea +lat_0=45 +lon_0=15 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")+
#geom_point(data = est_cntr_buf_df_tmp2, aes(x= X, y = Y, alpha = rnk, size= rnk), colour = "orange")+
geom_point(data = est_cntr_buf_df_head, aes(x= X, y = Y), colour = "darkred", size= 2.5)+
scale_alpha(range = c(0, 0.7))+
scale_size(range = c(0.2, 2))+
guides(alpha = F, size = F)
for(i in 1: nrow(est_cntr_buf_df)){
est_cntr_buf_df_tmp2 <- est_cntr_buf_df %>%
filter(rnk > i - 1 & rnk < i +10)
est_cntr_buf_df_head <- est_cntr_buf_df %>%
filter(rnk == i + 10)
ggplot(data = World) +
theme_void()+
theme(panel.grid = element_line(color = "slategray1", size= .25))+
geom_sf(fill = "olivedrab", size= .25, col = "grey80") +
geom_path(data = est_cntr_buf_df, aes(x = X, y = Y), col = "pink", size= 0.1)+
#coord_sf(crs = "+proj=laea +lat_0=45 +lon_0=15 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")+
coord_sf(crs = "+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs")+
geom_point(data = est_cntr_buf_df_tmp2, aes(x= X, y = Y, alpha = rnk, size= rnk), colour = "orange")+
geom_point(data = est_cntr_buf_df_head, aes(x= X, y = Y), colour = "darkred", size= 2.5)+
scale_alpha(range = c(0, 0.7))+
scale_size(range = c(0.2, 2))+
guides(alpha = F, size = F)
frame_name <- paste0("airplane_", est_cntr_buf_df$frame_name[i], ".png")
ggsave(filename = frame_name, dpi = 200, height = 3, width = 4.5)
}
getwd()
for(i in 1: nrow(est_cntr_buf_df)){
est_cntr_buf_df_tmp2 <- est_cntr_buf_df %>%
filter(rnk > i - 1 & rnk < i +10)
est_cntr_buf_df_head <- est_cntr_buf_df %>%
filter(rnk == i + 10)
ggplot(data = World) +
theme_void()+
theme(panel.grid = element_line(color = "slategray1", size= .25))+
geom_sf(fill = "olivedrab", size= .25, col = "grey80") +
geom_path(data = est_cntr_buf_df, aes(x = X, y = Y), col = "pink", size= 0.1)+
#coord_sf(crs = "+proj=laea +lat_0=45 +lon_0=15 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")+
coord_sf(crs = "+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs")+
geom_point(data = est_cntr_buf_df_tmp2, aes(x= X, y = Y, alpha = rnk, size= rnk), colour = "orange")+
geom_point(data = est_cntr_buf_df_head, aes(x= X, y = Y), colour = "darkred", size= 2.5)+
scale_alpha(range = c(0, 0.7))+
scale_size(range = c(0.2, 2))+
guides(alpha = F, size = F)
frame_name <- paste0("airplane_", est_cntr_buf_df$frame_name[i], ".png")
ggsave(filename = frame_name, dpi = 200, height = 3, width = 4.5)
}
install.packages("rmarkdown")
install.packages("flexdashboard")
library(flexdashboard)
library(flexdashboard)
setwd("F:/R_directory/assignment8")
library(tidyverse)
library(ggthemes)
library(plotly)
library(sf)
library(leaflet)
library(gganimate)
library(tmap)
library(readxl)
opendata_covid19_test_county_all <- read_excel("opendata_covid19_test_county_all.csv")
View(opendata_covid19_test_county_all)
library(readxl)
opendata_covid19_test_county_all_xl <- read_excel("opendata_covid19_test_county_all_xl.xlsx")
View(opendata_covid19_test_county_all_xl)
covid <- read_df("F:/R_directory/assignment8/opendata_covid19_test_county_all.csv", ";")
covid <- read_delim("F:/R_directory/assignment8/opendata_covid19_test_county_all.csv", ";")
glimpse(covid)
covid <- read_delim("F:/R_directory/assignment8/opendata_covid19_test_county_all.csv")
glimpse(covid)
view(covid)
covid %>%
distinct(ResultValue, .keep_all = FALSE)
dplyr::filter(covid, ResultValue %in% c("P"))
covid %>%
distinct(ResultValue, .keep_all = FALSE)
covid_p = dplyr::filter(covid, ResultValue %in% c("P"))
covid_p %>%
distinct(ResultValue, .keep_all = FALSE)
ggplot()+
geom_line(data = covid_p, aes(x= StatisticsDate, y = DailyCases), size= .25)+
facet_wrap(vars(County), scale = "free_y")
glimpse(covid_p)
covid_no_maakkond <- covid_p %>%
mutate(County = gsub(" maakond", "", County))
covid_no_maakkond
ggplot()+
geom_line(data = covid_no_maakkond, aes(x= StatisticsDate, y = DailyCases), size= .25)+
facet_wrap(vars(County), scale = "free_y")
covid_test_county_all <- covid_no_maakkond %>%
filter(!is.na(County))
#interactive map
gg_cov_cases <- ggplot()+
geom_line(data = covid19_test_county_all, aes(x = StatisticsDate, y = DailyCases), size = .25)+
facet_wrap(vars(County), scale = "free_y", ncol = 3)
#interactive map
gg_cov_cases <- ggplot()+
geom_line(data = covid_test_county_all, aes(x = StatisticsDate, y = DailyCases), size = .25)+
facet_wrap(vars(County), scale = "free_y", ncol = 3)
plotly::ggplotly(gg_cov_cases)
covid19_test_county_all_latest <- covid_test_county_all %>%
select(CountyEHAK, DailyCases, StatisticsDate) %>%
filter(StatisticsDate == max(StatisticsDate))
#maakond means county!
unzip("maakond_shp.zip")
download.file("https://geoportaal.maaamet.ee/docs/haldus_asustus/maakond_shp.zip", destfile="maakond_shp.zip")
#maakond means county!
unzip("maakond_shp.zip")
# import shp as simple feature:
county <- st_read("maakond_20211201.shp")
# import shp as simple feature:
counties <- st_read("maakond_20211201.shp")
# data structure:
glimpse(counties)
counties <- counties %>%
st_simplify(preserveTopology = TRUE, dTolerance = 200) %>%
st_cast("MULTIPOLYGON") # defines the type of geometry after simplification
# structure:
glimpse(counties)
covid19_test_county_all_latest_sf <- left_join(counties, covid19_test_county_all_latest, by = c("MKOOD" = "CountyEHAK"))
covid19_test_county_all_latest_sf_cntr <- covid19_test_county_all_latest_sf %>%
st_centroid()
gg_covid19_map <- ggplot()+
theme_void()+
geom_sf(data = covid19_test_county_all_latest_sf, aes(fill = DailyCases))+
geom_sf_text(data = covid19_test_county_all_latest_sf_cntr, aes(label = DailyCases))+
scale_fill_gradientn(colours = c("forestgreen", "grey70", "orange", "red"))
gg_covid19_map
library(leaflet)
# polygons:
covid19_test_county_all_latest_sf_4326 <- covid19_test_county_all_latest_sf %>%
st_transform(4326)
# labels:
covid19_test_county_all_latest_sf_cntr_4326 <- covid19_test_county_all_latest_sf_cntr %>%
st_transform(4326)
tmap_mode("view")
tm_shape(covid19_test_county_all_latest_sf_4326)+
tm_polygons(col = "DailyCases",
style = "pretty",
palette = "Reds",
alpha = .7)+
tm_shape(covid19_test_county_all_latest_sf_cntr_4326)+
tm_text(text = "DailyCases",
bg.color = "grey",
shadow = T)
covid_new <- covid_test_county_all %>%
select(CountyEHAK, DailyCases, StatisticsDate) %>%
filter(StatisticsDate == sum(StatisticsDate))
#covid_new <- covid_test_county_all %>%
# select(CountyEHAK, DailyCases, StatisticsDate) %>%
#filter(StatisticsDate == max(StatisticsDate))
# Install the package
install.packages("lubridate")
#covid_new <- covid_test_county_all %>%
# select(CountyEHAK, DailyCases, StatisticsDate) %>%
#filter(StatisticsDate == max(StatisticsDate))
# Install the package
#install.packages("lubridate")
# Load the package
library(lubridate)
covid_last_week <-  covid19_test_county_all_latest_sf_cntr_4326%>%
#select(FL_DATE, CARRIER, ORIGIN, ORIGIN_CITY_NAME, ORIGIN_STATE_ABR, DEP_DELAY, DEP_TIME, ARR_DELAY, ARR_TIME) %>%
filter(StatisticsDate >= as.Date("12/23/2021") & StatisticsDate <= as.Date("12/29/2021"))
covid_last_week <-  covid19_test_county_all_latest_sf_cntr_4326%>%
select(StatisticsDate, County, CountyEHAK, ResultValue) %>%
filter(StatisticsDate >= as.Date("2021-12-23") & StatisticsDate <= as.Date("2021-12-29"))
glimpse(covid19_test_county_all_latest_sf_cntr_4326)
covid_last_week <-  covid19_test_county_all_latest_sf_cntr_4326%>%
select(MNIMI, MKOOD, DailyCases, StatisticsDate, geometry) %>%
filter(StatisticsDate >= as.Date("2021-12-23") & StatisticsDate <= as.Date("2021-12-29"))
covid_last_week
view(covid_last_week)
view(covid19_test_county_all_latest_sf_cntr_4326)
view(covid_last_week)
view(covid_test_county_all)
glimpse(covid_test_county_all)
covid_last_week <-  covid_test_county_all%>%
select(StatisticsDate, County, CountyEHAK, ResultValue, DailyCases, TotalCases) %>%
filter(StatisticsDate >= as.Date("2021-12-23") & StatisticsDate <= as.Date("2021-12-29"))
view(covid_last_week)
#library(dplyr)
covid_last_week %>%
group_by(County) %>%
summarise(DailyCases = sum(DailyCases))
view(covid_last_week)
sapply(covid19_test_county_all_latest_sf, class)
sapply(counties, class)
sapply(covid19_test_county_all_latest, class)
view(covid_last_week)
#library(dplyr)
hello <- covid_last_week %>%
group_by(County) %>%
summarise(DailyCases = sum(DailyCases))
view(hello)
#library(dplyr)
last_week_sum <- covid_last_week %>%
group_by(CountyEHAK) %>%
summarise(DailyCases = sum(DailyCases))
view(last_week_sum)
#join
last_week_sum_sf <- left_join(counties, last_week_sum, by = c("MKOOD" = "CountyEHAK"))
last_week_sum_sf_4326 <- last_week_sum_sf %>%
st_transform(4326)
last_week_sum_sf_cntr <- last_week_sum_sf %>%
st_centroid()
last_week_sum_sf_4326 <- last_week_sum_sf %>%
st_transform(4326)
# labels:
last_week_sum_sf_cntr_4326 <- last_week_sum_sf_cntr %>%
st_transform(4326)
tmap_mode("view")
tm_shape(last_week_sum_sf_4326)+
tm_polygons(col = "DailyCases",
style = "pretty",
palette = "Reds",
alpha = .7)+
tm_shape(last_week_sum_sf_cntr_4326 )+
tm_text(text = "DailyCases",
bg.color = "grey",
shadow = T)
covid_week_before_last_week <-  covid_test_county_all%>%
select(StatisticsDate, County, CountyEHAK, ResultValue, DailyCases, TotalCases) %>%
filter(StatisticsDate >= as.Date("2021-12-16") & StatisticsDate <= as.Date("2021-12-22"))
week_before_last_week_sum <- covid_last_week %>%
group_by(CountyEHAK) %>%
summarise(DailyCases = sum(DailyCases))
week_before_last_week_sum_sf <- left_join(counties, week_before_last_week_sum, by = c("MKOOD" = "CountyEHAK"))
week_before_last_week_sum_sf_cntr <- week_before_last_week_sum_sf %>%
st_centroid()
week_before_last_week_sum_sf_4326 <- week_before_last_week_sum_sf %>%
st_transform(4326)
# labels:
week_before_last_week_sum_sf_cntr_4326 <- week_before_last_week_sum_sf_cntr %>%
st_transform(4326)
tmap_mode("view")
tm_shape(week_before_last_week_sum_sf_4326)+
tm_polygons(col = "DailyCases",
style = "pretty",
palette = "Reds",
alpha = .7)+
tm_shape(week_before_last_week_sum_sf_cntr_4326 )+
tm_text(text = "DailyCases",
bg.color = "grey",
shadow = T)
#group by ehak code
week_before_last_week_sum <- covid_week_before_last_week %>%
group_by(CountyEHAK) %>%
summarise(DailyCases = sum(DailyCases))
week_before_last_week_sum_sf <- left_join(counties, week_before_last_week_sum, by = c("MKOOD" = "CountyEHAK"))
week_before_last_week_sum_sf_cntr <- week_before_last_week_sum_sf %>%
st_centroid()
week_before_last_week_sum_sf_4326 <- week_before_last_week_sum_sf %>%
st_transform(4326)
# labels:
week_before_last_week_sum_sf_cntr_4326 <- week_before_last_week_sum_sf_cntr %>%
st_transform(4326)
tmap_mode("view")
tm_shape(week_before_last_week_sum_sf_4326)+
tm_polygons(col = "DailyCases",
style = "pretty",
palette = "Reds",
alpha = .7)+
tm_shape(week_before_last_week_sum_sf_cntr_4326 )+
tm_text(text = "DailyCases",
bg.color = "grey",
shadow = T)
ggplot()+
geom_line(data = covid_p, aes(x= StatisticsDate, y = DailyCases), size= .25)+
facet_wrap(vars(County), scale = "free_y")
tm_shape(week_before_last_week_sum_sf_4326)+
tm_polygons(col = "DailyCases",
style = "pretty",
palette = "Reds",
alpha = .7)+
tm_shape(week_before_last_week_sum_sf_cntr_4326 )+
tm_text(text = "DailyCases",
bg.color = "grey",
shadow = T)
library(tidyverse)
library(ggthemes)
library(plotly)
library(sf)
library(leaflet)
library(tmap)
library(devtools)
#library(RCurl)
library(httr)
library(ggplot2)
library(tibble)
#library(gganimate)
#import data
covid19_test_county_all <- read.csv("F:/R_directory/assignment8/opendata_covid19_test_county_all.csv", stringsAsFactors=TRUE)
glimpse(covid19_test_county_all)
#Select only Positive results
covid19_test_county_all <- covid19_test_county_all[!(covid19_test_county_all$ResultValue=='N'),]
glimpse(covid19_test_county_all)
covid19_test_county_all %>%
distinct(ResultValue, .keep_all = FALSE)
#plot as a static plot
ggplot()+
geom_line(data = covid19_test_county_all, aes(x= StatisticsDate, y = DailyCases), size= .25)+
facet_wrap(vars(County), scale = "free_y")
#plot as a static plot
ggplot()+
geom_line(data = covid19_test_county_all, aes(x= StatisticsDate, y = DailyCases, group = 1), size= .25)+
facet_wrap(vars(County), scale = "free_y")
ggplot()+
geom_line(data = covid_p, aes(x= StatisticsDate, y = DailyCases), size= .25)+
facet_wrap(vars(County), scale = "free_y")
tm_shape(week_before_last_week_sum_sf_4326)+
tm_polygons(col = "DailyCases",
style = "pretty",
palette = "Reds",
alpha = .7)+
tm_shape(week_before_last_week_sum_sf_cntr_4326 )+
tm_text(text = "DailyCases",
bg.color = "grey",
shadow = T)
gg_covid19_map_week_before_last_week <- ggplot()+
theme_void()+
geom_sf(data = week_before_last_week_sum_sf, aes(fill = DailyCases))+
geom_sf_text(data = week_before_last_week_sum_sf_cntr, aes(label = DailyCases))+
scale_fill_gradientn(colours = c("forestgreen", "grey70", "orange", "red"))
gg_covid19_map_week_before_last_week
##
gg_covid19_last_week <- ggplot()+
theme_void()+
geom_sf(data = last_week_sum_sf, aes(fill = DailyCases))+
geom_sf_text(data = last_week_sum_sf_cntr, aes(label = DailyCases))+
scale_fill_gradientn(colours = c("forestgreen", "grey70", "orange", "red"))
gg_covid19_last_week
gg_covid19_map_last_week + gg_covid19_map_week_before_last_week + plot_layout(ncol = 2, widths = c(1.5,1))
gg_covid19_last_week + gg_covid19_map_week_before_last_week + plot_layout(ncol = 2, widths = c(1.5,1))
gg_covid19_last_week + gg_covid19_map_week_before_last_week #+ plot_layout(ncol = 2, widths = c(1.5,1))
tm_shape(last_week_sum_sf_4326)+
tm_polygons(col = "DailyCases",
style = "pretty",
palette = "Reds",
alpha = .7)+
tm_shape(last_week_sum_sf_cntr_4326 )+
tm_text(text = "DailyCases",
bg.color = "grey",
shadow = T)+
tm_shape(week_before_last_week_sum_sf_4326)+
tm_polygons(col = "DailyCases",
style = "pretty",
palette = "Reds",
alpha = .7)+
tm_shape(week_before_last_week_sum_sf_cntr_4326 )+
tm_text(text = "DailyCases",
bg.color = "grey",
shadow = T)
gg_covid19_last_week + gg_covid19_map_week_before_last_week #+ plot_layout(ncol = 2, widths = c(1.5,1))
gg_covid19_last_week + gg_covid19_map_week_before_last_week + plot_layout(ncol = 2, widths = c(1.5,1))
ggthemes:: gg_covid19_last_week + gg_covid19_map_week_before_last_week + plot_layout(ncol = 2, widths = c(1.5,1))
grid.arrange(gg_covid19_last_week, gg_covid19_map_week_before_last_week , nrow = 1)
library(ggmap)
library(gridExtra)
grid.arrange(gg_covid19_last_week, gg_covid19_map_week_before_last_week , nrow = 1)
grid.arrange(gg_covid19_last_week, gg_covid19_map_week_before_last_week , nrow = 2)
tm_shape(week_before_last_week_sum_sf_4326)+
tm_polygons(col = "DailyCases",
style = "pretty",
palette = "Reds",
alpha = .7)+
tm_shape(week_before_last_week_sum_sf_cntr_4326 )+
tm_text(text = "DailyCases",
bg.color = "grey",
shadow = T)
a <- tm_shape(week_before_last_week_sum_sf_4326)+
tm_polygons(col = "DailyCases",
style = "pretty",
palette = "Reds",
alpha = .7)+
tm_shape(week_before_last_week_sum_sf_cntr_4326 )+
tm_text(text = "DailyCases",
bg.color = "grey",
shadow = T)
a
b <- tm_shape(last_week_sum_sf_4326)+
tm_polygons(col = "DailyCases",
style = "pretty",
palette = "Reds",
alpha = .7)+
tm_shape(last_week_sum_sf_cntr_4326 )+
tm_text(text = "DailyCases",
bg.color = "grey",
shadow = T)
b
grid.arrange(b, a , nrow = 2)
grid.arrange(a, b , nrow = 2)
tmap_arrange(a, b, nrow = 2)
